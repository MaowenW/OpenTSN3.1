	sgmii_pcs_share u0 (
		.clk               (<connected-to-clk>),               //        control_port_clock_connection.clk
		.reset             (<connected-to-reset>),             //                     reset_connection.reset
		.reg_data_out      (<connected-to-reg_data_out>),      //                         control_port.readdata
		.reg_rd            (<connected-to-reg_rd>),            //                                     .read
		.reg_data_in       (<connected-to-reg_data_in>),       //                                     .writedata
		.reg_wr            (<connected-to-reg_wr>),            //                                     .write
		.reg_busy          (<connected-to-reg_busy>),          //                                     .waitrequest
		.reg_addr          (<connected-to-reg_addr>),          //                                     .address
		.rx_afull_clk      (<connected-to-rx_afull_clk>),      // receive_fifo_status_clock_connection.clk
		.rx_afull_data     (<connected-to-rx_afull_data>),     //                  receive_fifo_status.data
		.rx_afull_valid    (<connected-to-rx_afull_valid>),    //                                     .valid
		.rx_afull_channel  (<connected-to-rx_afull_channel>),  //                                     .channel
		.mac_rx_clk_0      (<connected-to-mac_rx_clk_0>),      //            mac_rx_clock_connection_0.clk
		.mac_tx_clk_0      (<connected-to-mac_tx_clk_0>),      //            mac_tx_clock_connection_0.clk
		.data_rx_data_0    (<connected-to-data_rx_data_0>),    //                            receive_0.data
		.data_rx_eop_0     (<connected-to-data_rx_eop_0>),     //                                     .endofpacket
		.data_rx_error_0   (<connected-to-data_rx_error_0>),   //                                     .error
		.data_rx_ready_0   (<connected-to-data_rx_ready_0>),   //                                     .ready
		.data_rx_sop_0     (<connected-to-data_rx_sop_0>),     //                                     .startofpacket
		.data_rx_valid_0   (<connected-to-data_rx_valid_0>),   //                                     .valid
		.data_tx_data_0    (<connected-to-data_tx_data_0>),    //                           transmit_0.data
		.data_tx_eop_0     (<connected-to-data_tx_eop_0>),     //                                     .endofpacket
		.data_tx_error_0   (<connected-to-data_tx_error_0>),   //                                     .error
		.data_tx_ready_0   (<connected-to-data_tx_ready_0>),   //                                     .ready
		.data_tx_sop_0     (<connected-to-data_tx_sop_0>),     //                                     .startofpacket
		.data_tx_valid_0   (<connected-to-data_tx_valid_0>),   //                                     .valid
		.pkt_class_data_0  (<connected-to-pkt_class_data_0>),  //                receive_packet_type_0.data
		.pkt_class_valid_0 (<connected-to-pkt_class_valid_0>), //                                     .valid
		.magic_wakeup_0    (<connected-to-magic_wakeup_0>),    //                mac_misc_connection_0.magic_wakeup
		.magic_sleep_n_0   (<connected-to-magic_sleep_n_0>),   //                                     .magic_sleep_n
		.tx_crc_fwd_0      (<connected-to-tx_crc_fwd_0>),      //                                     .tx_crc_fwd
		.ref_clk           (<connected-to-ref_clk>),           //         pcs_ref_clk_clock_connection.clk
		.led_crs_0         (<connected-to-led_crs_0>),         //              status_led_connection_0.crs
		.led_link_0        (<connected-to-led_link_0>),        //                                     .link
		.led_panel_link_0  (<connected-to-led_panel_link_0>),  //                                     .panel_link
		.led_col_0         (<connected-to-led_col_0>),         //                                     .col
		.led_an_0          (<connected-to-led_an_0>),          //                                     .an
		.led_char_err_0    (<connected-to-led_char_err_0>),    //                                     .char_err
		.led_disp_err_0    (<connected-to-led_disp_err_0>),    //                                     .disp_err
		.rx_recovclkout_0  (<connected-to-rx_recovclkout_0>),  //          serdes_control_connection_0.export
		.mac_rx_clk_1      (<connected-to-mac_rx_clk_1>),      //            mac_rx_clock_connection_1.clk
		.mac_tx_clk_1      (<connected-to-mac_tx_clk_1>),      //            mac_tx_clock_connection_1.clk
		.data_rx_data_1    (<connected-to-data_rx_data_1>),    //                            receive_1.data
		.data_rx_eop_1     (<connected-to-data_rx_eop_1>),     //                                     .endofpacket
		.data_rx_error_1   (<connected-to-data_rx_error_1>),   //                                     .error
		.data_rx_ready_1   (<connected-to-data_rx_ready_1>),   //                                     .ready
		.data_rx_sop_1     (<connected-to-data_rx_sop_1>),     //                                     .startofpacket
		.data_rx_valid_1   (<connected-to-data_rx_valid_1>),   //                                     .valid
		.data_tx_data_1    (<connected-to-data_tx_data_1>),    //                           transmit_1.data
		.data_tx_eop_1     (<connected-to-data_tx_eop_1>),     //                                     .endofpacket
		.data_tx_error_1   (<connected-to-data_tx_error_1>),   //                                     .error
		.data_tx_ready_1   (<connected-to-data_tx_ready_1>),   //                                     .ready
		.data_tx_sop_1     (<connected-to-data_tx_sop_1>),     //                                     .startofpacket
		.data_tx_valid_1   (<connected-to-data_tx_valid_1>),   //                                     .valid
		.pkt_class_data_1  (<connected-to-pkt_class_data_1>),  //                receive_packet_type_1.data
		.pkt_class_valid_1 (<connected-to-pkt_class_valid_1>), //                                     .valid
		.magic_wakeup_1    (<connected-to-magic_wakeup_1>),    //                mac_misc_connection_1.magic_wakeup
		.magic_sleep_n_1   (<connected-to-magic_sleep_n_1>),   //                                     .magic_sleep_n
		.tx_crc_fwd_1      (<connected-to-tx_crc_fwd_1>),      //                                     .tx_crc_fwd
		.mac_rx_clk_2      (<connected-to-mac_rx_clk_2>),      //            mac_rx_clock_connection_2.clk
		.mac_tx_clk_2      (<connected-to-mac_tx_clk_2>),      //            mac_tx_clock_connection_2.clk
		.data_rx_data_2    (<connected-to-data_rx_data_2>),    //                            receive_2.data
		.data_rx_eop_2     (<connected-to-data_rx_eop_2>),     //                                     .endofpacket
		.data_rx_error_2   (<connected-to-data_rx_error_2>),   //                                     .error
		.data_rx_ready_2   (<connected-to-data_rx_ready_2>),   //                                     .ready
		.data_rx_sop_2     (<connected-to-data_rx_sop_2>),     //                                     .startofpacket
		.data_rx_valid_2   (<connected-to-data_rx_valid_2>),   //                                     .valid
		.data_tx_data_2    (<connected-to-data_tx_data_2>),    //                           transmit_2.data
		.data_tx_eop_2     (<connected-to-data_tx_eop_2>),     //                                     .endofpacket
		.data_tx_error_2   (<connected-to-data_tx_error_2>),   //                                     .error
		.data_tx_ready_2   (<connected-to-data_tx_ready_2>),   //                                     .ready
		.data_tx_sop_2     (<connected-to-data_tx_sop_2>),     //                                     .startofpacket
		.data_tx_valid_2   (<connected-to-data_tx_valid_2>),   //                                     .valid
		.pkt_class_data_2  (<connected-to-pkt_class_data_2>),  //                receive_packet_type_2.data
		.pkt_class_valid_2 (<connected-to-pkt_class_valid_2>), //                                     .valid
		.magic_wakeup_2    (<connected-to-magic_wakeup_2>),    //                mac_misc_connection_2.magic_wakeup
		.magic_sleep_n_2   (<connected-to-magic_sleep_n_2>),   //                                     .magic_sleep_n
		.tx_crc_fwd_2      (<connected-to-tx_crc_fwd_2>),      //                                     .tx_crc_fwd
		.mac_rx_clk_3      (<connected-to-mac_rx_clk_3>),      //            mac_rx_clock_connection_3.clk
		.mac_tx_clk_3      (<connected-to-mac_tx_clk_3>),      //            mac_tx_clock_connection_3.clk
		.data_rx_data_3    (<connected-to-data_rx_data_3>),    //                            receive_3.data
		.data_rx_eop_3     (<connected-to-data_rx_eop_3>),     //                                     .endofpacket
		.data_rx_error_3   (<connected-to-data_rx_error_3>),   //                                     .error
		.data_rx_ready_3   (<connected-to-data_rx_ready_3>),   //                                     .ready
		.data_rx_sop_3     (<connected-to-data_rx_sop_3>),     //                                     .startofpacket
		.data_rx_valid_3   (<connected-to-data_rx_valid_3>),   //                                     .valid
		.data_tx_data_3    (<connected-to-data_tx_data_3>),    //                           transmit_3.data
		.data_tx_eop_3     (<connected-to-data_tx_eop_3>),     //                                     .endofpacket
		.data_tx_error_3   (<connected-to-data_tx_error_3>),   //                                     .error
		.data_tx_ready_3   (<connected-to-data_tx_ready_3>),   //                                     .ready
		.data_tx_sop_3     (<connected-to-data_tx_sop_3>),     //                                     .startofpacket
		.data_tx_valid_3   (<connected-to-data_tx_valid_3>),   //                                     .valid
		.pkt_class_data_3  (<connected-to-pkt_class_data_3>),  //                receive_packet_type_3.data
		.pkt_class_valid_3 (<connected-to-pkt_class_valid_3>), //                                     .valid
		.magic_wakeup_3    (<connected-to-magic_wakeup_3>),    //                mac_misc_connection_3.magic_wakeup
		.magic_sleep_n_3   (<connected-to-magic_sleep_n_3>),   //                                     .magic_sleep_n
		.tx_crc_fwd_3      (<connected-to-tx_crc_fwd_3>),      //                                     .tx_crc_fwd
		.led_crs_1         (<connected-to-led_crs_1>),         //              status_led_connection_1.crs
		.led_link_1        (<connected-to-led_link_1>),        //                                     .link
		.led_panel_link_1  (<connected-to-led_panel_link_1>),  //                                     .panel_link
		.led_col_1         (<connected-to-led_col_1>),         //                                     .col
		.led_an_1          (<connected-to-led_an_1>),          //                                     .an
		.led_char_err_1    (<connected-to-led_char_err_1>),    //                                     .char_err
		.led_disp_err_1    (<connected-to-led_disp_err_1>),    //                                     .disp_err
		.rx_recovclkout_1  (<connected-to-rx_recovclkout_1>),  //          serdes_control_connection_1.export
		.led_crs_2         (<connected-to-led_crs_2>),         //              status_led_connection_2.crs
		.led_link_2        (<connected-to-led_link_2>),        //                                     .link
		.led_panel_link_2  (<connected-to-led_panel_link_2>),  //                                     .panel_link
		.led_col_2         (<connected-to-led_col_2>),         //                                     .col
		.led_an_2          (<connected-to-led_an_2>),          //                                     .an
		.led_char_err_2    (<connected-to-led_char_err_2>),    //                                     .char_err
		.led_disp_err_2    (<connected-to-led_disp_err_2>),    //                                     .disp_err
		.rx_recovclkout_2  (<connected-to-rx_recovclkout_2>),  //          serdes_control_connection_2.export
		.led_crs_3         (<connected-to-led_crs_3>),         //              status_led_connection_3.crs
		.led_link_3        (<connected-to-led_link_3>),        //                                     .link
		.led_panel_link_3  (<connected-to-led_panel_link_3>),  //                                     .panel_link
		.led_col_3         (<connected-to-led_col_3>),         //                                     .col
		.led_an_3          (<connected-to-led_an_3>),          //                                     .an
		.led_char_err_3    (<connected-to-led_char_err_3>),    //                                     .char_err
		.led_disp_err_3    (<connected-to-led_disp_err_3>),    //                                     .disp_err
		.rx_recovclkout_3  (<connected-to-rx_recovclkout_3>),  //          serdes_control_connection_3.export
		.rxp_0             (<connected-to-rxp_0>),             //                  serial_connection_0.rxp_0
		.txp_0             (<connected-to-txp_0>),             //                                     .txp_0
		.rxp_1             (<connected-to-rxp_1>),             //                  serial_connection_1.rxp_1
		.txp_1             (<connected-to-txp_1>),             //                                     .txp_1
		.rxp_2             (<connected-to-rxp_2>),             //                  serial_connection_2.rxp_2
		.txp_2             (<connected-to-txp_2>),             //                                     .txp_2
		.rxp_3             (<connected-to-rxp_3>),             //                  serial_connection_3.rxp_3
		.txp_3             (<connected-to-txp_3>)              //                                     .txp_3
	);

